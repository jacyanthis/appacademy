{"changed":true,"filter":false,"title":"calc.rb","tooltip":"/w2/w2d2/spec/calc.rb","value":"class RPNCalculator\n    \n  attr_accessor :array\n    \n  def initialize\n    @array = []\n  end\n  \n  def push(element)\n    array << element\n  end\n  \n  def empty_calculator\n    if array.length == 0\n      raise \"calculator is empty\"\n    elsif array.length == 1\n      raise \"calculator has only one number\"\n    end\n  end\n    \n  def plus\n    empty_calculator\n    array[-2..-1] = array[-2] + array[-1]\n  end\n  \n  def minus\n    empty_calculator\n    array[-2..-1] = array[-2] - array[-1]\n  end\n  \n  def times\n    empty_calculator\n    array[-2..-1] = array[-2] * array[-1]\n  end\n  \n  def divide\n    empty_calculator\n    array[-2..-1] = array[-2].to_f / array[-1]\n  end\n  \n  def value\n    array[-1]\n  end\n  \n  def tokens(string)\n    array2 = string.split(\" \")\n    array2.map do |element|\n      if /^\\d+$/.match(element) == nil\n        element.to_sym\n      else\n        element.to_i\n      end\n    end\n  end\n  \n  def evaluate(string)\n    array2 = tokens(string)\n    \n    array2.each do |element|\n      if element.is_a?(Fixnum)\n        self.push(element)\n      elsif element == :+\n        self.plus\n      elsif element == :-\n        self.minus\n      elsif element == :*\n        self.times\n      elsif element == :/\n        self.divide\n      end\n    end\n      self.value\n  end\n\nend\n\nif __FILE__ == $PROGRAM_NAME\n  if ARGV.empty?\n    puts(RPNCalculator.new.evaluate($stdin))\n  else\n    contents = File.read(ARGV[0])\n    puts(RPNCalculator.new.evaluate(contents))\n  end\nend\n    \n=begin\nf = File.open(\"cool-things.txt\", \"w\")\nf.puts \"Race cars\"\nf.puts \"Lasers\"\nf.puts \"Aeroplanes\"\n\n# will make sure output is \"synced\" to disk and properly saved\nf.close\n=end","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":93,"column":4},"action":"insert","lines":["class RPNCalculator","    ","  attr_accessor :array","    ","  def initialize","    @array = []","  end","  ","  def push(element)","    array << element","  end","  ","  def empty_calculator","    if array.length == 0","      raise \"calculator is empty\"","    elsif array.length == 1","      raise \"calculator has only one number\"","    end","  end","    ","  def plus","    empty_calculator","    array[-2..-1] = array[-2] + array[-1]","  end","  ","  def minus","    empty_calculator","    array[-2..-1] = array[-2] - array[-1]","  end","  ","  def times","    empty_calculator","    array[-2..-1] = array[-2] * array[-1]","  end","  ","  def divide","    empty_calculator","    array[-2..-1] = array[-2].to_f / array[-1]","  end","  ","  def value","    array[-1]","  end","  ","  def tokens(string)","    array2 = string.split(\" \")","    array2.map do |element|","      if /^\\d+$/.match(element) == nil","        element.to_sym","      else","        element.to_i","      end","    end","  end","  ","  def evaluate(string)","    array2 = tokens(string)","    ","    array2.each do |element|","      if element.is_a?(Fixnum)","        self.push(element)","      elsif element == :+","        self.plus","      elsif element == :-","        self.minus","      elsif element == :*","        self.times","      elsif element == :/","        self.divide","      end","    end","      self.value","  end","","end","","if __FILE__ == $PROGRAM_NAME","  if ARGV.empty?","    puts(RPNCalculator.new.evaluate($stdin))","  else","    contents = File.read(ARGV[0])","    puts(RPNCalculator.new.evaluate(contents))","  end","end","    ","=begin","f = File.open(\"cool-things.txt\", \"w\")","f.puts \"Race cars\"","f.puts \"Lasers\"","f.puts \"Aeroplanes\"","","# will make sure output is \"synced\" to disk and properly saved","f.close","=end"],"id":1}]]},"ace":{"folds":[],"scrolltop":1260.6362495422363,"scrollleft":0,"selection":{"start":{"row":81,"column":46},"end":{"row":81,"column":46},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":71,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1433301526911}