{"filter":false,"title":"test.rb","tooltip":"/w3/w3d2/test.rb","ace":{"folds":[],"scrolltop":1080,"scrollleft":0,"selection":{"start":{"row":71,"column":31},"end":{"row":71,"column":31},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":73,"state":"start","mode":"ace/mode/ruby"}},"hash":"03e1d3a5132583c7de5450ddcc4cd32129024456","undoManager":{"mark":30,"position":30,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["t"],"id":1}],[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["e"],"id":2}],[{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["s"],"id":3}],[{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":["t"],"id":4}],[{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"insert","lines":["."],"id":5}],[{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"remove","lines":["."],"id":6}],[{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"remove","lines":["t"],"id":7}],[{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"remove","lines":["s"],"id":8}],[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"remove","lines":["e"],"id":9}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":["t"],"id":10}],[{"start":{"row":0,"column":0},"end":{"row":109,"column":3},"action":"insert","lines":["class Mastermind","    ","    attr_reader :n, :target_code, :colors, :max_guesses","    ","    def initialize","        ","        ","        puts \"How many pegs? \"","        n = gets.chomp.to_i","    ","        @n = n","        @target_code = Code.new(n)","        @max_guesses = 2 * n + 2","        puts \"Display will be:\"","        puts \" \" * 6 + \"#_hits\"","        puts \"<code>\"","        puts \" \" * 6 + \"#_misses\"","        play","    end","    ","    def play","        guess_count = 0","        won = false","        # TA: I think #won? should be a method, rather than a variable","        until won || guess_count == max_guesses","            # TA: I would extract this logic to another method (maybe #over?)","            puts \"What's your guess?\"","            guess_code = Code.new(n,  gets.chomp.upcase.split(\"\"))","            num_hits = target_code.hits(guess_code)","            num_misses = target_code.misses(guess_code)","            won = show_result(guess_code, num_hits, num_misses)","        end","        if won","            # TA: I'd also like to see this in a helper method: maybe #game_over","            puts \"You won in #{guess_count} guesses!\"","        else","            puts \"You lose!\"","            puts \"Target was:\"","            puts target_code.join","        end","        ","    end","    ","    def show_result(guess_code, num_hits, num_misses)","        puts \" \" * n + num_hits.to_s","        puts guess_code.code.join","        puts \" \" * n + num_misses.to_s","","        num_hits == n","    end","    ","end","","class Code","    ","    attr_reader :colors, :code, :n, :color_occurrences","    ","    def initialize(n, code = nil)","        @n = n","        @colors = [\"R\",\"B\",\"G\",\"Y\",\"O\",\"P\"]","        if !code","            instantiate_target(n)","        else","            @code = code","            @color_occurrences = nil","        end","    end","    ","    def instantiate_target(n)","        @code = Array.new(n)","        (0...n).each do |i|","            @code[i] = colors.sample","        end","        @color_occurrences = {}","        set_color_occurrences","    end","    ","    def set_color_occurrences","        @code.each do |color|","            if @color_occurrences[color]","                @color_occurrences[color] += 1","            else","                @color_occurrences[color] = 1","            end","        end ","    end","    ","    def [](index)","        code[index]","        # TA: This is good. :)","    end","    ","    def hits(guess_code)","        (0...n).select { |i| guess_code[i] == self[i] }.size","        # TA: Nice.","    end","    ","    def misses(guess_code)","        occurrences = color_occurrences.dup","        guess_code.code.select do |color|","            if !occurrences[color] || occurrences[color] == 0","                false","            else","                occurrences[color] -= 1","                true","            end","        end.size - hits(guess_code)","    end","    ","end"],"id":11}],[{"start":{"row":109,"column":3},"end":{"row":110,"column":0},"action":"insert","lines":["",""],"id":12}],[{"start":{"row":110,"column":0},"end":{"row":111,"column":0},"action":"insert","lines":["",""],"id":13}],[{"start":{"row":111,"column":0},"end":{"row":111,"column":1},"action":"insert","lines":["M"],"id":14}],[{"start":{"row":111,"column":1},"end":{"row":111,"column":2},"action":"insert","lines":["a"],"id":15}],[{"start":{"row":111,"column":2},"end":{"row":111,"column":3},"action":"insert","lines":["s"],"id":16}],[{"start":{"row":111,"column":3},"end":{"row":111,"column":4},"action":"insert","lines":["t"],"id":17}],[{"start":{"row":111,"column":4},"end":{"row":111,"column":5},"action":"insert","lines":["e"],"id":18}],[{"start":{"row":111,"column":5},"end":{"row":111,"column":6},"action":"insert","lines":["r"],"id":19}],[{"start":{"row":111,"column":6},"end":{"row":111,"column":7},"action":"insert","lines":["m"],"id":20}],[{"start":{"row":111,"column":7},"end":{"row":111,"column":8},"action":"insert","lines":["i"],"id":21}],[{"start":{"row":111,"column":8},"end":{"row":111,"column":9},"action":"insert","lines":["n"],"id":22}],[{"start":{"row":111,"column":9},"end":{"row":111,"column":10},"action":"insert","lines":["d"],"id":23}],[{"start":{"row":111,"column":10},"end":{"row":111,"column":11},"action":"insert","lines":["."],"id":24}],[{"start":{"row":111,"column":11},"end":{"row":111,"column":12},"action":"insert","lines":["n"],"id":25}],[{"start":{"row":111,"column":12},"end":{"row":111,"column":13},"action":"insert","lines":["e"],"id":59}],[{"start":{"row":111,"column":13},"end":{"row":111,"column":14},"action":"insert","lines":["w"],"id":90}],[{"start":{"row":71,"column":29},"end":{"row":71,"column":36},"action":"remove","lines":[".sample"],"id":95},{"start":{"row":71,"column":29},"end":{"row":71,"column":38},"action":"insert","lines":["[.sample]"]}],[{"start":{"row":71,"column":30},"end":{"row":71,"column":37},"action":"remove","lines":[".sample"],"id":96},{"start":{"row":71,"column":30},"end":{"row":71,"column":31},"action":"insert","lines":["i"]}],[{"start":{"row":71,"column":31},"end":{"row":71,"column":32},"action":"insert","lines":["]"],"id":97}],[{"start":{"row":71,"column":31},"end":{"row":71,"column":32},"action":"remove","lines":["]"],"id":98}]]},"timestamp":1433914555000}